Sum or Product
Send Feedback
Write a program that asks the user for a number N and a choice C. And then give them the possibility to choose between computing the sum and computing the product of all integers in the range 1 to N (both inclusive).
If C is equal to -
 1, then print the sum
 2, then print the product
 Any other number, then print '-1' (without the quotes)
 
 import java.util.Scanner;
public class Main {
	public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        int n = s.nextInt();
        int c = s.nextInt();
        int sum = 0;
        int mul = 1;
        for(int i = 1; i<=n; i++){
            if(c==1){
                sum += i;
            }
            else if(c==2){
                mul*=i;
            }
        }
        if(c==1){
            System.out.println(sum);
        }else if(c==2){
            System.out.println(mul);
        }else{System.out.println(-1);}

	}
}

Check Number sequence
Send Feedback
You are given S, a sequence of n integers i.e. S = s1, s2, ..., sn. Compute if it is possible to split S into two parts : s1, s2, ..., si and si+1, si+2, â€¦.., sn (0 <= i <= n) in such a way that the first part is strictly decreasing while the second is strictly increasing one.
Note : We say that x is strictly larger than y when x > y.
So, a strictly increasing sequence can be 1 4 8. However, 1 4 4 is NOT a strictly increasing sequence.

import java.util.Scanner;
public class Main {
	public static void main(String[] args) {
        Scanner scan = new Scanner(System.in);
        int num = scan.nextInt();
        boolean is_dec = true;
        int prev = scan.nextInt();
        int cur  = 0;
        for(int i = 1;i < num; i++){
            cur = scan.nextInt();
            if (prev == cur){
                System.out.print(false);
                break;
            }
			if(prev > cur && is_dec == false){
                System.out.print(false); 
                break;
            } 
            if (prev > cur){
                is_dec = true;
            }else if (prev < cur){
                is_dec = false;
            }
            if( i == num-1){
                break;
            }else{
                prev = cur;  
            }
             
        }
        if(is_dec == true && prev > cur){
            System.out.print(true);
        }else if(is_dec == false && prev < cur){
            System.out.print(true);
        }else if (is_dec == true && prev < cur){
            System.out.print(true);
        }
	}
}
